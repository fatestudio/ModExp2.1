'''
This code is to generate testbench files

@author: fatestudio
'''
WIDTH = 16
BYTES = WIDTH / 4
ADDR = 8
SSIZE = 2 ** ADDR
TOTALBIT = WIDTH * SSIZE
m = 17555138354946113191141010309033626261506170611135471526354579215981238085834524547740315849324880781158639249182737547366981179404960923829194416882503485085848182600170715683902659269020498168229402187359487369299193972129197772247141905173302697475832536265048518193930668434175352994376184146558931651303002292987717320706926089312207674911049302498665888188599392584101799552096456267229224488749319106235222906107947625275060164243221291030559243187544269633275025972382150717043095405143910038416311535159461906279370243107425063578323272112035737965461708575574149884779334005006337920179933158918985296826224384473521474735539140964139892957487338467374588961258543587338945796308902111663848726154348875217007564921316789307131918025934771659546984551605715982755963209936979867302211183990738234101411363983648159585194340426689908218758758611436509155181778768859364794260008730241236400517907563749470585822571718510358701601387373501325685612060824814047853843976245211261955398334250472844321554624475555320206753526853222895260720715190400718725066079635005699720190336383345020852905052124227370707133635389457094415022926741814341280786252814913193157076942669884844089932018236043725198465813263226599219621752093
e = 5
n = 0x84c5b4763fe31d0347fc816ac16e2284c10faa4003ba33db73f7ba8e0445d656de3a5db5154ed51212093d26ac512b01f18dd1eed77c96c0084f3dd6415af341ee52bdb6d1020a15d9ed17e3cc0e95ee8d103ed3cc667e971773308cdc6b13ab2e47dc0e959f3a518cfe5cd12d5db79ba2a7ae1f3ac7652ccdf8440407295e4299901c0475491bc354c56c9a9cc9af4ec9546b439f9d01298a449ebe89d9bf020067dba8589890086a17b9af5b569643d037cdff7c240d4969d495dd81355c53f0e642f43328ad088ded3c9691eb79fa5d5f576cdeb8fc4c7b297d0b0e5e18baf320cd576d14475b349aae908fb5262cc703806984c8199921167d8fcf23cae883333218bd91a1b7f03edca7e2dcaa37f463b337d20b5d59db610487c89da11b62397bc701762741bab9f87ff50592859be3cecb8c497c68a8c24d4244ef7febe8e5b4617589a82b5a702cfa93ea5c4ed8f33418f3d4e7115804f92283868a29678a5aa33b6fe5078c5fe8f8dc3bf364eb8ac8ce8a245e6b33138131c541013d0326324dfb695ffb3a1890c78092b4d42b28fef02b9c014ea5ac06d864c2f2e39403560d97dae38d9d643c25fbb230bbd92a4aa2b410d93c4efbc8d60b21fbac78255d6807923986bb968a437d5c8dfc5eda92d864ac5db9d707107e855c384429e821a4c74803e31ba1621582283d15a9ec0806705fca161622bd795fec898fL
r = 0x7b3a4b89c01ce2fcb8037e953e91dd7b3ef055bffc45cc248c084571fbba29a921c5a24aeab12aededf6c2d953aed4fe0e722e112883693ff7b0c229bea50cbe11ad42492efdf5ea2612e81c33f16a1172efc12c33998168e88ccf732394ec54d1b823f16a60c5ae7301a32ed2a248645d5851e0c5389ad33207bbfbf8d6a1bd666fe3fb8ab6e43cab3a9365633650b136ab94bc6062fed675bb6141762640fdff982457a7676ff795e84650a4a969bc2fc8320083dbf2b6962b6a227ecaa3ac0f19bd0bccd752f77212c3696e148605a2a0a893214703b384d682f4f1a1e7450cdf32a892ebb8a4cb65516f704ad9d338fc7f967b37e666dee9827030dc35177ccccde7426e5e480fc123581d2355c80b9c4cc82df4a2a6249efb7837625ee49dc68438fe89d8be454607800afa6d7a641c313473b68397573db2bdbb108014171a4b9e8a7657d4a58fd3056c15a3b1270ccbe70c2b18eea7fb06dd7c7975d69875a55cc4901af873a0170723c40c9b1475373175dba194ccec7ece3abefec2fcd9cdb20496a004c5e76f387f6d4b2bd4d7010fd463feb15a53f9279b3d0d1c6bfca9f268251c72629bc3da044dcf4426d5b55d4bef26c3b1043729f4de045387daa297f86dc679446975bc82a37203a1256d279b53a24628f8ef817aa3c7bbd617de5b38b7fc1ce45e9dea7dd7c2ea5613f7f98fa035e9e9dd4286a0137671L
t = 0x149c1965ad98fa46718523dad5f58f409d89062bd8eda4fdf2066470f135295f07c9917922a964a86e6637fa3ca95da43ef4b1440a12b8ef9518ae092a7c394a6748cb70d58c588c1b98a5e684eecd0d6482cd53c788fa6917f328b41c901b921b9e6229191b68a6de0ae73aa48bb1b97d90a87cd03fbbc4958f626f4a1131523a9a9a285a43a743c95f516a94fb9120578e46c026e95b17ebafa21eb031aa153c4a088ffc15c724fb94efe911f499d4713bc2b69544b8f0565a3bcbc87476039409db1237b42777bc768610a3668dd167329a416f1cd4b76f39db9920e96cfce28601753d3988efd7c2368322eec88afc9227224374a351c79891833b715d01ae06fdfb77efa45d06cdb515499fa60711a738951c5836fd35605d6ab7d595c77acdff93e6b100354e1fd46c8dac7c5ee2276688a89b7b2a71a5acdaa14ea7d579c730582a57f5213bf4e86e41840ab5d8e7aee5bebbc2b0f2bb3810c6183272d1aeed41c012e824ae264f5fc010a19efb05f6b41fca9bc4a0a34b0f89fd1237e4e415995f80cfb6cb06c0a97843a5f817df090edd741e9f2b94c7ae4af92d64dc64dc90e98f4afe5e12a9a96f7d7742d4b94bc352c949d7192d6bf19f25d484432c1e910135f001a401baa22b888c2eef79ce5f386efa550d21bcdfdf4473e04255b841d1a34bdb41d7011500400a06490666572b90f2c573053f82acaa289eL
nprime0 = 0x3bea2df6a3b18a91

#print(hex(2 ** 4096 % n))
#print(hex((2 ** 4096) ** 2 % n))
'''
a = 2 ** 4096 - n
print "GET T!"
print hex(a)
for i in range(4096):
    a = a * 2
    if(a >= n):
        a = a - n
    print hex(a)
print(hex((2 ** 4096) ** 2 % n))    
'''
ns = str(hex(n))[2:len(str(hex(n))) - 1][::-1]
ms = str(hex(m))[2:len(str(hex(m))) - 1][::-1]
es = str(hex(e))[2:len(str(hex(e)))][::-1]
rs = str(hex(r))[2:len(str(hex(r))) - 1][::-1]
ts = str(hex(t))[2:len(str(hex(t))) - 1][::-1]
nprime0s = str(hex(nprime0))[2:len(str(hex(nprime0))) - 1][::-1]

#print(ns)
#print(len(ns))
#print(ms)
#print(len(ms))

def boundaryPrint(ms, i, headstr):
    if(len(ms) >= i * BYTES + BYTES):   # much larger
        print(headstr + ms[i * BYTES : i * BYTES + BYTES][::-1] + ";")
    elif(len(ms) <= i * BYTES):          # much smaller
        print(headstr + "0000;")
    else:                               # in between
        for j in range(BYTES):
            if(len(ms) <= i * BYTES + j):
                zeros = ""                  # generate zeros string
                for k in range(BYTES - j):
                    zeros = zeros + "0"
                if(j == 0):
                    print(headstr + zeros + ";")
                else:
                    print(headstr + zeros + ms[i * BYTES : ][::-1] + ";")
                break
    
for i in range(SSIZE):
    print("#10")
    boundaryPrint(ms, i, "m_buf = 16'h")
    boundaryPrint(es, i, "e_buf = 16'h")
    boundaryPrint(ns, i, "n_buf = 16'h")
    boundaryPrint(rs, i, "r_buf = 16'h")
    boundaryPrint(ts, i, "t_buf = 16'h")
    boundaryPrint(nprime0s, i, "nprime0_buf = 16'h")
 
#print(n)